[{"C:\\CLASSFILES\\Other-Resources\\ITDB\\client\\src\\index.js":"1","C:\\CLASSFILES\\Other-Resources\\ITDB\\client\\src\\App.js":"2","C:\\CLASSFILES\\Other-Resources\\ITDB\\client\\src\\components\\ListApplications.js":"3","C:\\CLASSFILES\\Other-Resources\\ITDB\\client\\src\\components\\InputApplication.js":"4","C:\\CLASSFILES\\Other-Resources\\ITDB\\client\\src\\components\\EditApplication.js":"5","C:\\CLASSFILES\\Other-Resources\\ITDB\\client\\src\\components\\Header.js":"6","C:\\CLASSFILES\\Other-Resources\\ITDB\\client\\src\\components\\InputVendor.js":"7","C:\\CLASSFILES\\Other-Resources\\ITDB\\client\\src\\components\\ListVendors.js":"8","C:\\CLASSFILES\\Other-Resources\\ITDB\\client\\src\\components\\EditVendor.js":"9"},{"size":221,"mtime":1612987542290,"results":"10","hashOfConfig":"11"},{"size":1349,"mtime":1613683351143,"results":"12","hashOfConfig":"11"},{"size":2064,"mtime":1613678274199,"results":"13","hashOfConfig":"11"},{"size":1586,"mtime":1613678282739,"results":"14","hashOfConfig":"11"},{"size":3201,"mtime":1613678291113,"results":"15","hashOfConfig":"11"},{"size":844,"mtime":1613679492151,"results":"16","hashOfConfig":"11"},{"size":1761,"mtime":1613684704401,"results":"17","hashOfConfig":"11"},{"size":2090,"mtime":1613684799554,"results":"18","hashOfConfig":"11"},{"size":3187,"mtime":1613684137277,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1e5sf1n",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\CLASSFILES\\Other-Resources\\ITDB\\client\\src\\index.js",[],["43","44"],"C:\\CLASSFILES\\Other-Resources\\ITDB\\client\\src\\App.js",[],"C:\\CLASSFILES\\Other-Resources\\ITDB\\client\\src\\components\\ListApplications.js",["45"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport EditApplication from \"./EditApplication\";\r\n\r\nconst ListApplications = () => {\r\n\r\n    const [applications, setApplications] = useState([]);\r\n\r\n    const APIServer = \"http://192.168.180.14:5000\"\r\n\r\n    // delete funuction\r\n\r\n    const deleteTodo = async (serial) => {\r\n        \r\n        try {\r\n            const deleteApplication = await fetch(`${APIServer}/application/${serial}`, {\r\n                method: \"DELETE\"\r\n            });\r\n            setApplications(applications.filter(application => application.Serial !== serial));\r\n            console.log(deleteApplication);\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n\r\n    }\r\n\r\n    const getApplications = async () => {\r\n        try {\r\n            const response = await fetch(`${APIServer}/application`);\r\n            const jsonData = await response.json();\r\n\r\n            setApplications(jsonData);\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getApplications();\r\n\r\n    }, []);\r\n\r\n    console.log(applications);\r\n    return (\r\n    <Fragment>\r\n  <table className=\"table mt-5 text-center\">\r\n    <thead>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Application_URL</th>\r\n        <th>Edit</th>\r\n        <th>Delete</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n    {applications.map(application => (\r\n        \r\n        <tr key={application.Serial}>\r\n            \r\n            <td><div>{application.Application_Name}</div><div>{application.Description}</div>\r\n            </td>\r\n            <td><a target=\"_blank\" href={application.Application_URL}>LINK</a></td>\r\n            <td><EditApplication application={application}/></td>\r\n            <td>\r\n            <button className=\"btn btn-danger\"\r\n            onClick={() => deleteTodo(application.Serial)}\r\n            >Delete</button>    \r\n            </td>\r\n        </tr>  \r\n    ))}    \r\n      \r\n    </tbody>\r\n  </table>\r\n\r\n    </Fragment>);\r\n\r\n};\r\n\r\nexport default ListApplications;","C:\\CLASSFILES\\Other-Resources\\ITDB\\client\\src\\components\\InputApplication.js",["46"],"import React, { Fragment, useState } from 'react';\r\n\r\nconst InputApplication = () => {\r\n\r\n    const [Application_Name, setApplication_Name] = useState(\"Name\");\r\n    const [Application_URL, setApplication_URL] = useState(\"URL\");\r\n    const [Description, setDescription] = useState(\"Description\");\r\n\r\n    const APIServer = \"http://192.168.180.14:5000\";\r\n    \r\n    const onSubmitForm = async() => {\r\n        try{\r\n            const body = { Application_Name, Application_URL, Description };\r\n            const response = await fetch(`${APIServer}/application`, {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(body)\r\n        });\r\n        console.log({body});\r\n        \r\n        window.location = \"/\";\r\n        } catch (err) {\r\n            console.error(err.message);\r\n\r\n        }\r\n    };\r\n\r\n    return(\r\n    <Fragment>\r\n            {/* <h3 className=\"text-center mt-5\">Application Add</h3> */}\r\n            <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>\r\n            <input type=\"text\" className=\"form-control\" value={Application_Name} onChange={e => setApplication_Name(e.target.value)}/>\r\n            <input type=\"text\" className=\"form-control\" value={Application_URL} onChange={e => setApplication_URL(e.target.value)}/>\r\n            <input type=\"text\" className=\"form-control\" value={Description} onChange={e => setDescription(e.target.value)}/>\r\n            <button className=\"btn btn-success\">Add</button>\r\n            </form>\r\n    </Fragment>);\r\n};\r\n\r\nexport default InputApplication;","C:\\CLASSFILES\\Other-Resources\\ITDB\\client\\src\\components\\EditApplication.js",[],"C:\\CLASSFILES\\Other-Resources\\ITDB\\client\\src\\components\\Header.js",["47"],"import React, { Fragment } from 'react';\r\n\r\n const Header = ({ selection }) => {\r\n \r\n    return(\r\n    <Fragment>\r\n        <div class=\"d-flex flex-row justify-content-center\">\r\n            <div className=\"p-2\">\r\n                <a className={'btn ' + ((`${selection}` === 'Applications') ? 'btn-primary' : 'btn-outline-primary')} href=\"/Applications\" role=\"button\">\r\n                    Applications\r\n                </a>\r\n            </div>\r\n            <div className=\"p-2\"><a class={'btn ' + ((`${selection}` === 'Vendors') ? 'btn-primary' : 'btn-outline-primary')} href=\"/Vendors\" role=\"button\">Vendors</a></div>\r\n            <div className=\"p-2\"><a class={'btn ' + ((`${selection}` === 'Other') ? 'btn-primary' : 'btn-outline-primary')} href=\"#\" role=\"button\">Other</a></div>\r\n        </div>\r\n    </Fragment>);\r\n};\r\n\r\nexport default Header;","C:\\CLASSFILES\\Other-Resources\\ITDB\\client\\src\\components\\InputVendor.js",["48"],"import React, { Fragment, useState } from 'react';\r\n\r\nconst InputVendor = () => {\r\n\r\n    const [Company_Name, setCompany_Name] = useState(\"CompanyName\");\r\n    const [Account_Number, setAccount_Number] = useState(\"AccountNum\");\r\n    const [Notes, setNotes] = useState(\"Notes\");\r\n    const [Contract_Renewal, setContract_Renewal] = useState(\"ContractRenewal\");\r\n\r\n    const APIServer = \"http://192.168.180.156:5000\";\r\n    \r\n    const onSubmitForm = async() => {\r\n        try{\r\n            const body = { Company_Name, Account_Number, Notes, Contract_Renewal };\r\n            const response = await fetch(`${APIServer}/vendor`, {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(body)\r\n        });\r\n        console.log({body});\r\n        \r\n        window.location = \"/\";\r\n        } catch (err) {\r\n            console.error(err.message);\r\n\r\n        }\r\n    };\r\n\r\n    return(\r\n    <Fragment>\r\n            {/* <h3 className=\"text-center mt-5\">Application Add</h3> */}\r\n            <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>\r\n            <input type=\"text\" className=\"form-control\" value={Company_Name} onChange={e => setCompany_Name(e.target.value)}/>\r\n            <input type=\"text\" className=\"form-control\" value={Account_Number} onChange={e => setAccount_Number(e.target.value)}/>\r\n            <input type=\"text\" className=\"form-control\" value={Notes} onChange={e => setNotes(e.target.value)}/>\r\n            <input type=\"text\" className=\"form-control\" value={Contract_Renewal} onChange={e => setContract_Renewal(e.target.value)}/>\r\n            <button className=\"btn btn-success\">Add</button>\r\n            </form>\r\n    </Fragment>);\r\n};\r\n\r\nexport default InputVendor;","C:\\CLASSFILES\\Other-Resources\\ITDB\\client\\src\\components\\ListVendors.js",["49"],"C:\\CLASSFILES\\Other-Resources\\ITDB\\client\\src\\components\\EditVendor.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":61,"column":17,"nodeType":"56","endLine":61,"endColumn":71},{"ruleId":"57","severity":1,"message":"58","line":14,"column":19,"nodeType":"59","messageId":"60","endLine":14,"endColumn":27},{"ruleId":"61","severity":1,"message":"62","line":14,"column":34,"nodeType":"56","endLine":14,"endColumn":148},{"ruleId":"57","severity":1,"message":"58","line":15,"column":19,"nodeType":"59","messageId":"60","endLine":15,"endColumn":27},{"ruleId":"57","severity":1,"message":"63","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":18},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'EditVendor' is defined but never used.","no-global-assign","no-unsafe-negation"]